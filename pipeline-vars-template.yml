#
# Copy this file to pipeline-vars.yml, add appropriate values, and supply
# to fly when creating or updating the concourse pipeline.
#
# For example:
#
#   fly -t TARGET set-pipeline \
#     -p deploy-pcf \
#     -c ci/scs-pipeline.yml \
#     -l pipeline-vars.yml
#
# Note pipeline-vars.yml is in .gitignore to help avoid checking sensitive
# material into github.
#
# Notes on BOSH authentication:
#   omg and the Concourse bosh-deployment resource use two different types
#     of authentication mechanisms:
#
#   1. bosh-user and bosh-pass below below are for omg so it can authenticate
#      to bosh and read the cloud-config when generating the manifest.
#   2. bosh-client-id and bosh-client-secret are for the Concourse bosh-deployment
#      resource so it can authenticate to do the deployment.
#
bosh-cacert: |
  -----BEGIN CERTIFICATE-----
  ...
  -----END CERTIFICATE-----
bosh-pass: PASSWORD
bosh-url: https://10.0.0.10
bosh-user: admin
cloud_config_plugin: aws-cloudconfigplugin-linux
concourse-url: http://10.0.0.31:8080
concourse-user: USERNAME
concourse-pass: PASSWORD
deployment-name: scs-nonprod
p-spring-cloud-services-version: 1.1.3
stemcell: bosh-vsphere-esxi-ubuntu-trusty-go_agent
stemcell-cpi-glob: '*vsphere*'
stemcell-version: 3232.17
product_plugin: p-spring-cloud-services-plugin-linux
pivnet_api_token: API_TOKEN
vault_addr: http://10.0.0.8:8200
vault_token: VAULT_TOKEN

# Vault hash containing app-domain and system-domain
vault_hash_hostvars: secret/cloudfoundry-nonprod-hostvars

# Vault hash containing bosh-url, bosh-port, bosh-user, and bosh-pass
vault_hash_misc: secret/common-nonprod-props

# Vault hash containing the PCF admin-password
vault_hash_password: secret/cloudfoundry-nonprod-password

# Vault hash where the SCS plugin stores its credentials
vault_hash_secret: secret/pscs-nonprod-password

#eof
